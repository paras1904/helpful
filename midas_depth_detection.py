# -*- coding: utf-8 -*-
"""midas DEpth detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HAnyOhOvdFiv31_1NWQD9wDddlhaNG-W
"""

!pip install timm
import torch
import cv2
import matplotlib.pyplot as plt

#load model
midas = torch.hub.load("intel-isl/MiDaS","DPT_Large")

# move model to gpu
device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
midas.to(device)
midas.eval()

# load transform to resize and normalize image
midas_transforms = torch.hub.load('intel-isl/MiDaS','transforms')
transform = midas_transforms.dpt_transform

# load_image
img = cv2.imread('/content/Photo-1.jpeg')
img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
input_batch = transform(img).to((device))

with torch.no_grad():
  prediction = midas(input_batch)
  prediction = torch.nn.functional.interpolate(
      prediction.unsqueeze(1),
      size = img.shape[:2],
      mode =  'bicubic',
      align_corners = False,
  ).squeeze()
  output = prediction.cpu().numpy()

  plt.imshow(output)

